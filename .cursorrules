Tech Stack:
    Backend: Node.js with Express.js, JavaScript CommonJS
    Database: SQLite and VectorDB
    Authentication: JSON Web Tokens (JWT)
    Version Control: Git
    Operating System: Windows
    Paradigm: Domain Driven Design

Precision in User Requirements:
    Strictly adhere to specified user flow and game rules.

Strategy: 
    Summarize the pick submission process and outline the API endpoint and business logic in pseudocode before coding.

Strategic Planning with Pseudocode:
    Begin each feature with detailed pseudocode.
    Example: Provide pseudocode for the weekly scoring process, detailing steps from game result input to entry status updates.

Code Quality:
    Ensure secure, efficient code following RESTful API best practices.
    Implement proper error handling and input validation.

Project structure:
src/
    api/
    config/
    services/
    domain/
    infrastructure/
    utils/

Domain entities:
    Subject - Aggregate Root
        Document - Entity   

    Chat - Aggregate Root
        Message - Value Object

Should be implemented:
    Query
    SystemMessage
